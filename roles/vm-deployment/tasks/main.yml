---
- name: Get VMs list
  community.libvirt.virt:
    command: list_vms
  register: existing_vms
  changed_when: no


- name: Define Network
  community.libvirt.virt_net:
    command: define
    name: VM_net
    xml: '{{ lookup("template", "network/default_network.xml") }}'

- name: Create network
  community.libvirt.virt_net:
    command: create
    name: VM_net
   

- name: Create VM if not exists
  block:

    - name: generate SSH key for guest VM
      user:
        name: "root"
        generate_ssh_key: yes
        ssh_key_type: rsa
        ssh_key_bits: 4096
        ssh_key_file: /var/lib/libvirt/ssh_keys/id_rsa.pub
        ssh_key_passphrase: ""
        force: no
    
    - name: Download base image
      get_url:
        url: "{{ base_image_url }}"
        dest: "/tmp/{{ base_image_name }}"

    - name: Copy base image to libvirt directory
      copy:
        dest: "{{ libvirt_pool_dir }}/{{ vm_name }}.qcow2"
        src: "/tmp/{{ base_image_name }}"
        force: no
        remote_src: yes
        mode: 0660
      register: copy_results

    - name: Configure the image
      command: |
        virt-customize -a {{ libvirt_pool_dir }}/{{ vm_name }}.qcow2 \
        --hostname {{ vm_name }} \
        --uninstall ssh \
        --root-password password:{{ vm_root_pass }} \
        --ssh-inject 'root:file:/var/lib/libvirt/ssh_keys/id_rsa.pub' \
        --install openssh-server \
        --uninstall cloud-init 
        --selinux-relabel
      
      when: copy_results is changed


    - name: Define vm
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', 'vm-tamplate.xml') }}"

  
 
    - name: Configure DHCP reservation for VM 
      community.libvirt.virt_net:
        name: VM_net
        command: modify
        xml: "<host mac='52:54:00:f3:25:90' name='{{ vm_name }}' ip='{{ vm_ip_address }}'/>"

      when: "vm_name not in existing_vms.list_vms"

- name: Ensure VM is started
  community.libvirt.virt:
    name: "{{ vm_name }}"
    state: running
  register: vm_start_results
  until: "vm_start_results is success"
  retries: 15
  delay: 2

